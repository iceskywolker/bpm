activiti.cloud.application.name=pracelab
spring.application.name=${ACT_RB_APP_NAME:contracts}
server.port=8888

####################################### Konfiguracja dla Rabbita ##########################################

spring.rabbitmq.host=${ACT_RABBITMQ_HOST:127.0.0.1}
spring.rabbitmq.port=5672
spring.rabbitmq.ssl.enabled=false
#spring.rabbitmq.ssl.algorithm=TLSv1.2

spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=${ACT_RABBITMQ_VHOST:/}


spring.cloud.stream.bindings.auditProducer.destination=${ACT_RB_AUDIT_PRODUCER_DEST:engineEvents}
spring.cloud.stream.bindings.auditProducer.contentType=${ACT_RB_AUDIT_PRODUCER_CONTENT_TYPE:application/json}

spring.cloud.stream.bindings.myCmdResults.destination=${ACT_RB_COMMAND_RESULTS_DEST:commandResults}
spring.cloud.stream.bindings.myCmdResults.group=${ACT_RB_COMMAND_RESULTS_GROUP:myCmdGroup}
spring.cloud.stream.bindings.myCmdResults.contentType=${ACT_RB_COMMAND_RESULTS_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.myCmdProducer.destination=${ACT_RB_COMMAND_RESULTS_DEST:commandConsumer}
spring.cloud.stream.bindings.myCmdProducer.contentType=${ACT_RB_COMMAND_RESULTS_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.signalProducer.destination=${ACT_RB_SIGNAL_PRODUCER_DEST:signalEvent}
spring.cloud.stream.bindings.signalProducer.contentType=${ACT_RB_SIGNAL_PRODUCER_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.signalConsumer.destination=${ACT_RB_SIGNAL_CONSUMER_DEST:signalEvent}
spring.cloud.stream.bindings.signalConsumer.group=${ACT_RB_SIGNAL_CONSUMER_GROUP:mySignalConsumerGroup}
spring.cloud.stream.bindings.signalConsumer.contentType=${ACT_RB_SIGNAL_CONSUMER_CONTENT_TYPE:application/json}


spring.jackson.serialization.fail-on-unwrapped-type-identifiers=${ACT_RB_JACKSON_FAIL_ON_UNWRAPPED_IDS:false}

####################################### Konfiguracja dla Keycloaka ##########################################

keycloak.auth-server-url=${ACT_KEYCLOAK_URL:http://127.0.0.1/auth}
keycloak.realm=${ACT_KEYCLOAK_REALM:activity}
keycloak.resource=${ACT_KEYCLOAK_RESOURCE:activity}
keycloak.ssl-required=${ACT_KEYCLOAK_SSL_REQUIRED:external}
keycloak.public-client=${ACT_KEYCLOAK_CLIENT:true}

keycloak.bearer-only=true

keycloak.security-constraints[0].authRoles[0]=${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_USER}
keycloak.security-constraints[0].securityCollections[0].patterns[0]=${ACT_KEYCLOAK_PATTERNS:/v1/*}

keycloak.security-constraints[1].authRoles[0]=${ACT_KEYCLOAK_ADMIN_ROLE:ACTIVITI_ADMIN}
keycloak.security-constraints[1].securityCollections[0].patterns[0]=/admin/*

# Kontroler REST bedzie wystawial endpointy w URI: /api/* - to uri jest objete ochrona autoryzacji w Keycloacku
#keycloak.security-constraints[2].authRoles[0]=${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_USER}
#keycloak.security-constraints[2].authRoles[1]=${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_ADMIN}
#keycloak.security-constraints[2].securityCollections[0].patterns[0]=${REST_KEYCLOAK_PATTERNS:/contracts/*}


keycloak.principal-attribute=${ACT_KEYCLOAK_PRINCIPAL_ATTRIBUTE:preferred-username}

# see https://issues.jboss.org/browse/KEYCLOAK-810 for configuration options

#activiti.keycloak.admin-client-app=${ACT_KEYCLOAK_CLIENT_APP:admin-cli}
#activiti.keycloak.client-user=${ACT_KEYCLOAK_CLIENT_USER:activiti-api}
#activiti.keycloak.client-password=${ACT_KEYCLOAK_CLIENT_PASSWORD:password}

spring.main.allow-bean-definition-overriding=true

spring.activiti.useStrongUuids=true


# zipkin (set spring.zipkin.enabled to true to activate)
spring.zipkin.enabled=false
spring.zipkin.base-url=http://127.0.0.1:80/
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1.0

# project manifest path
project.manifest.file.path=classpath:/default-project.json

spring.activiti.deploymentMode=never-fail

spring.activiti.async-executor.default-async-job-acquire-wait-time-in-millis=5000
spring.activiti.async-executor.default-timer-job-acquire-wait-time-in-millis=5000

#ensures the consumer (query, audit) will receive the message even if it starts after the message has been sent
spring.cloud.stream.bindings.auditProducer.producer.required-groups=${ACT_QUERY_CONSUMER_GROUP:query},${ACT_AUDIT_CONSUMER_GROUP:audit}

##################### Konfiguracja DB ########################################################################
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${POSTGRESQL_DS:jdbc:postgresql://127.0.0.1/activitidb}
spring.datasource.username=${POSTGRESQL_USERNAME:activiti}
spring.datasource.password=${POSTGRESQL_PASS:mypassword}